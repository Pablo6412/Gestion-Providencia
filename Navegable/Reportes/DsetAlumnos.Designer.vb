'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace Gestion.Reportes
    
    '''<summary>
    '''Represents a strongly typed in-memory cache of data.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
     Global.System.Xml.Serialization.XmlRootAttribute("DataSet1"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
    Partial Public Class DataSet1
        Inherits Global.System.Data.DataSet
        
        Private tablealumnos As alumnosDataTable
        
        Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.BeginInit
            Me.InitClass
            Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
            AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context, false)
            If (Me.IsBinarySerialized(info, context) = true) Then
                Me.InitVars(false)
                Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
                AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
                AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
                Return
            End If
            Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
            If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
                Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
                ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
                If (Not (ds.Tables("alumnos")) Is Nothing) Then
                    MyBase.Tables.Add(New alumnosDataTable(ds.Tables("alumnos")))
                End If
                Me.DataSetName = ds.DataSetName
                Me.Prefix = ds.Prefix
                Me.Namespace = ds.Namespace
                Me.Locale = ds.Locale
                Me.CaseSensitive = ds.CaseSensitive
                Me.EnforceConstraints = ds.EnforceConstraints
                Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
                Me.InitVars
            Else
                Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            End If
            Me.GetSerializationData(info, context)
            Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property alumnos() As alumnosDataTable
            Get
                Return Me.tablealumnos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.BrowsableAttribute(true),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
        Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
            Get
                Return Me._schemaSerializationMode
            End Get
            Set
                Me._schemaSerializationMode = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
        Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
            Get
                Return MyBase.Tables
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
        Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
            Get
                Return MyBase.Relations
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub InitializeDerivedDataSet()
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataSet
            Dim cln As DataSet1 = CType(MyBase.Clone,DataSet1)
            cln.InitVars
            cln.SchemaSerializationMode = Me.SchemaSerializationMode
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function ShouldSerializeTables() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function ShouldSerializeRelations() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
            If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
                Me.Reset
                Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
                ds.ReadXml(reader)
                If (Not (ds.Tables("alumnos")) Is Nothing) Then
                    MyBase.Tables.Add(New alumnosDataTable(ds.Tables("alumnos")))
                End If
                Me.DataSetName = ds.DataSetName
                Me.Prefix = ds.Prefix
                Me.Namespace = ds.Namespace
                Me.Locale = ds.Locale
                Me.CaseSensitive = ds.CaseSensitive
                Me.EnforceConstraints = ds.EnforceConstraints
                Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
                Me.InitVars
            Else
                Me.ReadXml(reader)
                Me.InitVars
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
            Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
            stream.Position = 0
            Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Overloads Sub InitVars()
            Me.InitVars(true)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Overloads Sub InitVars(ByVal initTable As Boolean)
            Me.tablealumnos = CType(MyBase.Tables("alumnos"),alumnosDataTable)
            If (initTable = true) Then
                If (Not (Me.tablealumnos) Is Nothing) Then
                    Me.tablealumnos.InitVars
                End If
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.DataSetName = "DataSet1"
            Me.Prefix = ""
            Me.Namespace = "http://tempuri.org/DataSet1.xsd"
            Me.EnforceConstraints = true
            Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
            Me.tablealumnos = New alumnosDataTable()
            MyBase.Tables.Add(Me.tablealumnos)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function ShouldSerializealumnos() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
            If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
                Me.InitVars
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim ds As DataSet1 = New DataSet1()
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any.Namespace = ds.Namespace
            sequence.Items.Add(any)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Delegate Sub alumnosRowChangeEventHandler(ByVal sender As Object, ByVal e As alumnosRowChangeEvent)
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class alumnosDataTable
            Inherits Global.System.Data.TypedTableBase(Of alumnosRow)
            
            Private columncodigo_alumno As Global.System.Data.DataColumn
            
            Private columncodigo_familia As Global.System.Data.DataColumn
            
            Private columncodigo_arancel As Global.System.Data.DataColumn
            
            Private columncodigo_curso As Global.System.Data.DataColumn
            
            Private columncodigo_año As Global.System.Data.DataColumn
            
            Private columncodigo_beca As Global.System.Data.DataColumn
            
            Private columncodigo_descuento As Global.System.Data.DataColumn
            
            Private columncodigo_taller1 As Global.System.Data.DataColumn
            
            Private columncodigo_taller2 As Global.System.Data.DataColumn
            
            Private columncodigo_taller3 As Global.System.Data.DataColumn
            
            Private columnnombre_apellido_alumno As Global.System.Data.DataColumn
            
            Private columnedad As Global.System.Data.DataColumn
            
            Private columnfecha_nacimiento As Global.System.Data.DataColumn
            
            Private columndni As Global.System.Data.DataColumn
            
            Private columnfecha_ingreso As Global.System.Data.DataColumn
            
            Private columnhermano_numero As Global.System.Data.DataColumn
            
            Private columnalumno_especial As Global.System.Data.DataColumn
            
            Private columnObservaciones As Global.System.Data.DataColumn
            
            Private columnfecha_baja As Global.System.Data.DataColumn
            
            Private columnestado As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "alumnos"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public ReadOnly Property codigo_alumnoColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columncodigo_alumno
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public ReadOnly Property codigo_familiaColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columncodigo_familia
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public ReadOnly Property codigo_arancelColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columncodigo_arancel
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public ReadOnly Property codigo_cursoColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columncodigo_curso
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public ReadOnly Property codigo_añoColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columncodigo_año
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public ReadOnly Property codigo_becaColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columncodigo_beca
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public ReadOnly Property codigo_descuentoColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columncodigo_descuento
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public ReadOnly Property codigo_taller1Column() As Global.System.Data.DataColumn
                Get
                    Return Me.columncodigo_taller1
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public ReadOnly Property codigo_taller2Column() As Global.System.Data.DataColumn
                Get
                    Return Me.columncodigo_taller2
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public ReadOnly Property codigo_taller3Column() As Global.System.Data.DataColumn
                Get
                    Return Me.columncodigo_taller3
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public ReadOnly Property nombre_apellido_alumnoColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnnombre_apellido_alumno
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public ReadOnly Property edadColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnedad
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public ReadOnly Property fecha_nacimientoColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnfecha_nacimiento
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public ReadOnly Property dniColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columndni
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public ReadOnly Property fecha_ingresoColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnfecha_ingreso
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public ReadOnly Property hermano_numeroColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnhermano_numero
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public ReadOnly Property alumno_especialColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnalumno_especial
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public ReadOnly Property ObservacionesColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnObservaciones
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public ReadOnly Property fecha_bajaColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnfecha_baja
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public ReadOnly Property estadoColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnestado
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As alumnosRow
                Get
                    Return CType(Me.Rows(index),alumnosRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Event alumnosRowChanging As alumnosRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Event alumnosRowChanged As alumnosRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Event alumnosRowDeleting As alumnosRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Event alumnosRowDeleted As alumnosRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Overloads Sub AddalumnosRow(ByVal row As alumnosRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Overloads Function AddalumnosRow( _
                        ByVal codigo_familia As Integer,  _
                        ByVal codigo_arancel As Integer,  _
                        ByVal codigo_curso As Integer,  _
                        ByVal codigo_año As Integer,  _
                        ByVal codigo_beca As Integer,  _
                        ByVal codigo_descuento As Integer,  _
                        ByVal codigo_taller1 As Integer,  _
                        ByVal codigo_taller2 As Integer,  _
                        ByVal codigo_taller3 As Integer,  _
                        ByVal nombre_apellido_alumno As String,  _
                        ByVal edad As Byte,  _
                        ByVal fecha_nacimiento As Date,  _
                        ByVal dni As String,  _
                        ByVal fecha_ingreso As Date,  _
                        ByVal hermano_numero As Integer,  _
                        ByVal alumno_especial As Integer,  _
                        ByVal Observaciones As String,  _
                        ByVal fecha_baja As Date,  _
                        ByVal estado As String) As alumnosRow
                Dim rowalumnosRow As alumnosRow = CType(Me.NewRow,alumnosRow)
                Dim columnValuesArray() As Object = New Object() {Nothing, codigo_familia, codigo_arancel, codigo_curso, codigo_año, codigo_beca, codigo_descuento, codigo_taller1, codigo_taller2, codigo_taller3, nombre_apellido_alumno, edad, fecha_nacimiento, dni, fecha_ingreso, hermano_numero, alumno_especial, Observaciones, fecha_baja, estado}
                rowalumnosRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowalumnosRow)
                Return rowalumnosRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Function FindBycodigo_alumno(ByVal codigo_alumno As Integer) As alumnosRow
                Return CType(Me.Rows.Find(New Object() {codigo_alumno}),alumnosRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As alumnosDataTable = CType(MyBase.Clone,alumnosDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New alumnosDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Friend Sub InitVars()
                Me.columncodigo_alumno = MyBase.Columns("codigo_alumno")
                Me.columncodigo_familia = MyBase.Columns("codigo_familia")
                Me.columncodigo_arancel = MyBase.Columns("codigo_arancel")
                Me.columncodigo_curso = MyBase.Columns("codigo_curso")
                Me.columncodigo_año = MyBase.Columns("codigo_año")
                Me.columncodigo_beca = MyBase.Columns("codigo_beca")
                Me.columncodigo_descuento = MyBase.Columns("codigo_descuento")
                Me.columncodigo_taller1 = MyBase.Columns("codigo_taller1")
                Me.columncodigo_taller2 = MyBase.Columns("codigo_taller2")
                Me.columncodigo_taller3 = MyBase.Columns("codigo_taller3")
                Me.columnnombre_apellido_alumno = MyBase.Columns("nombre_apellido_alumno")
                Me.columnedad = MyBase.Columns("edad")
                Me.columnfecha_nacimiento = MyBase.Columns("fecha_nacimiento")
                Me.columndni = MyBase.Columns("dni")
                Me.columnfecha_ingreso = MyBase.Columns("fecha_ingreso")
                Me.columnhermano_numero = MyBase.Columns("hermano_numero")
                Me.columnalumno_especial = MyBase.Columns("alumno_especial")
                Me.columnObservaciones = MyBase.Columns("Observaciones")
                Me.columnfecha_baja = MyBase.Columns("fecha_baja")
                Me.columnestado = MyBase.Columns("estado")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Private Sub InitClass()
                Me.columncodigo_alumno = New Global.System.Data.DataColumn("codigo_alumno", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columncodigo_alumno)
                Me.columncodigo_familia = New Global.System.Data.DataColumn("codigo_familia", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columncodigo_familia)
                Me.columncodigo_arancel = New Global.System.Data.DataColumn("codigo_arancel", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columncodigo_arancel)
                Me.columncodigo_curso = New Global.System.Data.DataColumn("codigo_curso", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columncodigo_curso)
                Me.columncodigo_año = New Global.System.Data.DataColumn("codigo_año", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columncodigo_año)
                Me.columncodigo_beca = New Global.System.Data.DataColumn("codigo_beca", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columncodigo_beca)
                Me.columncodigo_descuento = New Global.System.Data.DataColumn("codigo_descuento", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columncodigo_descuento)
                Me.columncodigo_taller1 = New Global.System.Data.DataColumn("codigo_taller1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columncodigo_taller1)
                Me.columncodigo_taller2 = New Global.System.Data.DataColumn("codigo_taller2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columncodigo_taller2)
                Me.columncodigo_taller3 = New Global.System.Data.DataColumn("codigo_taller3", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columncodigo_taller3)
                Me.columnnombre_apellido_alumno = New Global.System.Data.DataColumn("nombre_apellido_alumno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnnombre_apellido_alumno)
                Me.columnedad = New Global.System.Data.DataColumn("edad", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnedad)
                Me.columnfecha_nacimiento = New Global.System.Data.DataColumn("fecha_nacimiento", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnfecha_nacimiento)
                Me.columndni = New Global.System.Data.DataColumn("dni", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columndni)
                Me.columnfecha_ingreso = New Global.System.Data.DataColumn("fecha_ingreso", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnfecha_ingreso)
                Me.columnhermano_numero = New Global.System.Data.DataColumn("hermano_numero", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnhermano_numero)
                Me.columnalumno_especial = New Global.System.Data.DataColumn("alumno_especial", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnalumno_especial)
                Me.columnObservaciones = New Global.System.Data.DataColumn("Observaciones", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnObservaciones)
                Me.columnfecha_baja = New Global.System.Data.DataColumn("fecha_baja", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnfecha_baja)
                Me.columnestado = New Global.System.Data.DataColumn("estado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnestado)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columncodigo_alumno}, true))
                Me.columncodigo_alumno.AutoIncrement = true
                Me.columncodigo_alumno.AutoIncrementSeed = -1
                Me.columncodigo_alumno.AutoIncrementStep = -1
                Me.columncodigo_alumno.AllowDBNull = false
                Me.columncodigo_alumno.ReadOnly = true
                Me.columncodigo_alumno.Unique = true
                Me.columncodigo_familia.AllowDBNull = false
                Me.columncodigo_arancel.AllowDBNull = false
                Me.columncodigo_curso.AllowDBNull = false
                Me.columncodigo_beca.AllowDBNull = false
                Me.columncodigo_descuento.AllowDBNull = false
                Me.columncodigo_taller1.AllowDBNull = false
                Me.columncodigo_taller2.AllowDBNull = false
                Me.columncodigo_taller3.AllowDBNull = false
                Me.columnnombre_apellido_alumno.AllowDBNull = false
                Me.columnnombre_apellido_alumno.MaxLength = 60
                Me.columnedad.AllowDBNull = false
                Me.columnfecha_nacimiento.AllowDBNull = false
                Me.columndni.AllowDBNull = false
                Me.columndni.MaxLength = 10
                Me.columnfecha_ingreso.AllowDBNull = false
                Me.columnhermano_numero.AllowDBNull = false
                Me.columnalumno_especial.AllowDBNull = false
                Me.columnObservaciones.MaxLength = 2147483647
                Me.columnestado.MaxLength = 10
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Function NewalumnosRow() As alumnosRow
                Return CType(Me.NewRow,alumnosRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New alumnosRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(alumnosRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.alumnosRowChangedEvent) Is Nothing) Then
                    RaiseEvent alumnosRowChanged(Me, New alumnosRowChangeEvent(CType(e.Row,alumnosRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.alumnosRowChangingEvent) Is Nothing) Then
                    RaiseEvent alumnosRowChanging(Me, New alumnosRowChangeEvent(CType(e.Row,alumnosRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.alumnosRowDeletedEvent) Is Nothing) Then
                    RaiseEvent alumnosRowDeleted(Me, New alumnosRowChangeEvent(CType(e.Row,alumnosRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.alumnosRowDeletingEvent) Is Nothing) Then
                    RaiseEvent alumnosRowDeleting(Me, New alumnosRowChangeEvent(CType(e.Row,alumnosRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Sub RemovealumnosRow(ByVal row As alumnosRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As DataSet1 = New DataSet1()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "alumnosDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class alumnosRow
            Inherits Global.System.Data.DataRow
            
            Private tablealumnos As alumnosDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tablealumnos = CType(Me.Table,alumnosDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Property codigo_alumno() As Integer
                Get
                    Return CType(Me(Me.tablealumnos.codigo_alumnoColumn),Integer)
                End Get
                Set
                    Me(Me.tablealumnos.codigo_alumnoColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Property codigo_familia() As Integer
                Get
                    Return CType(Me(Me.tablealumnos.codigo_familiaColumn),Integer)
                End Get
                Set
                    Me(Me.tablealumnos.codigo_familiaColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Property codigo_arancel() As Integer
                Get
                    Return CType(Me(Me.tablealumnos.codigo_arancelColumn),Integer)
                End Get
                Set
                    Me(Me.tablealumnos.codigo_arancelColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Property codigo_curso() As Integer
                Get
                    Return CType(Me(Me.tablealumnos.codigo_cursoColumn),Integer)
                End Get
                Set
                    Me(Me.tablealumnos.codigo_cursoColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Property codigo_año() As Integer
                Get
                    Try 
                        Return CType(Me(Me.tablealumnos.codigo_añoColumn),Integer)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("El valor de la columna 'codigo_año' de la tabla 'alumnos' es DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tablealumnos.codigo_añoColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Property codigo_beca() As Integer
                Get
                    Return CType(Me(Me.tablealumnos.codigo_becaColumn),Integer)
                End Get
                Set
                    Me(Me.tablealumnos.codigo_becaColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Property codigo_descuento() As Integer
                Get
                    Return CType(Me(Me.tablealumnos.codigo_descuentoColumn),Integer)
                End Get
                Set
                    Me(Me.tablealumnos.codigo_descuentoColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Property codigo_taller1() As Integer
                Get
                    Return CType(Me(Me.tablealumnos.codigo_taller1Column),Integer)
                End Get
                Set
                    Me(Me.tablealumnos.codigo_taller1Column) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Property codigo_taller2() As Integer
                Get
                    Return CType(Me(Me.tablealumnos.codigo_taller2Column),Integer)
                End Get
                Set
                    Me(Me.tablealumnos.codigo_taller2Column) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Property codigo_taller3() As Integer
                Get
                    Return CType(Me(Me.tablealumnos.codigo_taller3Column),Integer)
                End Get
                Set
                    Me(Me.tablealumnos.codigo_taller3Column) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Property nombre_apellido_alumno() As String
                Get
                    Return CType(Me(Me.tablealumnos.nombre_apellido_alumnoColumn),String)
                End Get
                Set
                    Me(Me.tablealumnos.nombre_apellido_alumnoColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Property edad() As Byte
                Get
                    Return CType(Me(Me.tablealumnos.edadColumn),Byte)
                End Get
                Set
                    Me(Me.tablealumnos.edadColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Property fecha_nacimiento() As Date
                Get
                    Return CType(Me(Me.tablealumnos.fecha_nacimientoColumn),Date)
                End Get
                Set
                    Me(Me.tablealumnos.fecha_nacimientoColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Property dni() As String
                Get
                    Return CType(Me(Me.tablealumnos.dniColumn),String)
                End Get
                Set
                    Me(Me.tablealumnos.dniColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Property fecha_ingreso() As Date
                Get
                    Return CType(Me(Me.tablealumnos.fecha_ingresoColumn),Date)
                End Get
                Set
                    Me(Me.tablealumnos.fecha_ingresoColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Property hermano_numero() As Integer
                Get
                    Return CType(Me(Me.tablealumnos.hermano_numeroColumn),Integer)
                End Get
                Set
                    Me(Me.tablealumnos.hermano_numeroColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Property alumno_especial() As Integer
                Get
                    Return CType(Me(Me.tablealumnos.alumno_especialColumn),Integer)
                End Get
                Set
                    Me(Me.tablealumnos.alumno_especialColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Property Observaciones() As String
                Get
                    Try 
                        Return CType(Me(Me.tablealumnos.ObservacionesColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Observaciones' de la tabla 'alumnos' es DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tablealumnos.ObservacionesColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Property fecha_baja() As Date
                Get
                    Try 
                        Return CType(Me(Me.tablealumnos.fecha_bajaColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("El valor de la columna 'fecha_baja' de la tabla 'alumnos' es DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tablealumnos.fecha_bajaColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Property estado() As String
                Get
                    Try 
                        Return CType(Me(Me.tablealumnos.estadoColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("El valor de la columna 'estado' de la tabla 'alumnos' es DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tablealumnos.estadoColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Function Iscodigo_añoNull() As Boolean
                Return Me.IsNull(Me.tablealumnos.codigo_añoColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Sub Setcodigo_añoNull()
                Me(Me.tablealumnos.codigo_añoColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Function IsObservacionesNull() As Boolean
                Return Me.IsNull(Me.tablealumnos.ObservacionesColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Sub SetObservacionesNull()
                Me(Me.tablealumnos.ObservacionesColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Function Isfecha_bajaNull() As Boolean
                Return Me.IsNull(Me.tablealumnos.fecha_bajaColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Sub Setfecha_bajaNull()
                Me(Me.tablealumnos.fecha_bajaColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Function IsestadoNull() As Boolean
                Return Me.IsNull(Me.tablealumnos.estadoColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Sub SetestadoNull()
                Me(Me.tablealumnos.estadoColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Class alumnosRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As alumnosRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Sub New(ByVal row As alumnosRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public ReadOnly Property Row() As alumnosRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
    End Class
End Namespace

Namespace Gestion.Reportes.DataSet1TableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class alumnosTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "alumnos"
            tableMapping.ColumnMappings.Add("codigo_alumno", "codigo_alumno")
            tableMapping.ColumnMappings.Add("codigo_familia", "codigo_familia")
            tableMapping.ColumnMappings.Add("codigo_arancel", "codigo_arancel")
            tableMapping.ColumnMappings.Add("codigo_curso", "codigo_curso")
            tableMapping.ColumnMappings.Add("codigo_año", "codigo_año")
            tableMapping.ColumnMappings.Add("codigo_beca", "codigo_beca")
            tableMapping.ColumnMappings.Add("codigo_descuento", "codigo_descuento")
            tableMapping.ColumnMappings.Add("codigo_taller1", "codigo_taller1")
            tableMapping.ColumnMappings.Add("codigo_taller2", "codigo_taller2")
            tableMapping.ColumnMappings.Add("codigo_taller3", "codigo_taller3")
            tableMapping.ColumnMappings.Add("nombre_apellido_alumno", "nombre_apellido_alumno")
            tableMapping.ColumnMappings.Add("edad", "edad")
            tableMapping.ColumnMappings.Add("fecha_nacimiento", "fecha_nacimiento")
            tableMapping.ColumnMappings.Add("dni", "dni")
            tableMapping.ColumnMappings.Add("fecha_ingreso", "fecha_ingreso")
            tableMapping.ColumnMappings.Add("hermano_numero", "hermano_numero")
            tableMapping.ColumnMappings.Add("alumno_especial", "alumno_especial")
            tableMapping.ColumnMappings.Add("Observaciones", "Observaciones")
            tableMapping.ColumnMappings.Add("fecha_baja", "fecha_baja")
            tableMapping.ColumnMappings.Add("estado", "estado")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [alumnos] WHERE (([codigo_alumno] = @Original_codigo_alumno) AND ([co"& _ 
                "digo_familia] = @Original_codigo_familia) AND ([codigo_arancel] = @Original_codi"& _ 
                "go_arancel) AND ([codigo_curso] = @Original_codigo_curso) AND ((@IsNull_codigo_a"& _ 
                "ño = 1 AND [codigo_año] IS NULL) OR ([codigo_año] = @Original_codigo_año)) AND ("& _ 
                "[codigo_beca] = @Original_codigo_beca) AND ([codigo_descuento] = @Original_codig"& _ 
                "o_descuento) AND ([codigo_taller1] = @Original_codigo_taller1) AND ([codigo_tall"& _ 
                "er2] = @Original_codigo_taller2) AND ([codigo_taller3] = @Original_codigo_taller"& _ 
                "3) AND ([nombre_apellido_alumno] = @Original_nombre_apellido_alumno) AND ([edad]"& _ 
                " = @Original_edad) AND ([fecha_nacimiento] = @Original_fecha_nacimiento) AND ([d"& _ 
                "ni] = @Original_dni) AND ([fecha_ingreso] = @Original_fecha_ingreso) AND ([herma"& _ 
                "no_numero] = @Original_hermano_numero) AND ([alumno_especial] = @Original_alumno"& _ 
                "_especial) AND ((@IsNull_fecha_baja = 1 AND [fecha_baja] IS NULL) OR ([fecha_baj"& _ 
                "a] = @Original_fecha_baja)) AND ((@IsNull_estado = 1 AND [estado] IS NULL) OR (["& _ 
                "estado] = @Original_estado)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_codigo_alumno", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_alumno", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_codigo_familia", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_familia", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_codigo_arancel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_arancel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_codigo_curso", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_curso", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_codigo_año", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_año", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_codigo_año", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_año", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_codigo_beca", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_beca", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_codigo_descuento", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_descuento", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_codigo_taller1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_taller1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_codigo_taller2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_taller2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_codigo_taller3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_taller3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_nombre_apellido_alumno", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "nombre_apellido_alumno", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_edad", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "edad", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_fecha_nacimiento", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "fecha_nacimiento", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_dni", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dni", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_fecha_ingreso", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "fecha_ingreso", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_hermano_numero", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "hermano_numero", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_alumno_especial", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "alumno_especial", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_fecha_baja", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "fecha_baja", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_fecha_baja", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "fecha_baja", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_estado", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "estado", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_estado", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "estado", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [alumnos] ([codigo_familia], [codigo_arancel], [codigo_curso], [codig"& _ 
                "o_año], [codigo_beca], [codigo_descuento], [codigo_taller1], [codigo_taller2], ["& _ 
                "codigo_taller3], [nombre_apellido_alumno], [edad], [fecha_nacimiento], [dni], [f"& _ 
                "echa_ingreso], [hermano_numero], [alumno_especial], [Observaciones], [fecha_baja"& _ 
                "], [estado]) VALUES (@codigo_familia, @codigo_arancel, @codigo_curso, @codigo_añ"& _ 
                "o, @codigo_beca, @codigo_descuento, @codigo_taller1, @codigo_taller2, @codigo_ta"& _ 
                "ller3, @nombre_apellido_alumno, @edad, @fecha_nacimiento, @dni, @fecha_ingreso, "& _ 
                "@hermano_numero, @alumno_especial, @Observaciones, @fecha_baja, @estado);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELEC"& _ 
                "T codigo_alumno, codigo_familia, codigo_arancel, codigo_curso, codigo_año, codig"& _ 
                "o_beca, codigo_descuento, codigo_taller1, codigo_taller2, codigo_taller3, nombre"& _ 
                "_apellido_alumno, edad, fecha_nacimiento, dni, fecha_ingreso, hermano_numero, al"& _ 
                "umno_especial, Observaciones, fecha_baja, estado FROM alumnos WHERE (codigo_alum"& _ 
                "no = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@codigo_familia", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_familia", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@codigo_arancel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_arancel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@codigo_curso", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_curso", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@codigo_año", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_año", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@codigo_beca", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_beca", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@codigo_descuento", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_descuento", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@codigo_taller1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_taller1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@codigo_taller2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_taller2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@codigo_taller3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_taller3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@nombre_apellido_alumno", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "nombre_apellido_alumno", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@edad", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "edad", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fecha_nacimiento", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "fecha_nacimiento", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@dni", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dni", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fecha_ingreso", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "fecha_ingreso", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@hermano_numero", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "hermano_numero", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@alumno_especial", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "alumno_especial", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Observaciones", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Observaciones", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fecha_baja", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "fecha_baja", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@estado", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "estado", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [alumnos] SET [codigo_familia] = @codigo_familia, [codigo_arancel] = @codi"& _ 
                "go_arancel, [codigo_curso] = @codigo_curso, [codigo_año] = @codigo_año, [codigo_"& _ 
                "beca] = @codigo_beca, [codigo_descuento] = @codigo_descuento, [codigo_taller1] ="& _ 
                " @codigo_taller1, [codigo_taller2] = @codigo_taller2, [codigo_taller3] = @codigo"& _ 
                "_taller3, [nombre_apellido_alumno] = @nombre_apellido_alumno, [edad] = @edad, [f"& _ 
                "echa_nacimiento] = @fecha_nacimiento, [dni] = @dni, [fecha_ingreso] = @fecha_ing"& _ 
                "reso, [hermano_numero] = @hermano_numero, [alumno_especial] = @alumno_especial, "& _ 
                "[Observaciones] = @Observaciones, [fecha_baja] = @fecha_baja, [estado] = @estado"& _ 
                " WHERE (([codigo_alumno] = @Original_codigo_alumno) AND ([codigo_familia] = @Ori"& _ 
                "ginal_codigo_familia) AND ([codigo_arancel] = @Original_codigo_arancel) AND ([co"& _ 
                "digo_curso] = @Original_codigo_curso) AND ((@IsNull_codigo_año = 1 AND [codigo_a"& _ 
                "ño] IS NULL) OR ([codigo_año] = @Original_codigo_año)) AND ([codigo_beca] = @Ori"& _ 
                "ginal_codigo_beca) AND ([codigo_descuento] = @Original_codigo_descuento) AND ([c"& _ 
                "odigo_taller1] = @Original_codigo_taller1) AND ([codigo_taller2] = @Original_cod"& _ 
                "igo_taller2) AND ([codigo_taller3] = @Original_codigo_taller3) AND ([nombre_apel"& _ 
                "lido_alumno] = @Original_nombre_apellido_alumno) AND ([edad] = @Original_edad) A"& _ 
                "ND ([fecha_nacimiento] = @Original_fecha_nacimiento) AND ([dni] = @Original_dni)"& _ 
                " AND ([fecha_ingreso] = @Original_fecha_ingreso) AND ([hermano_numero] = @Origin"& _ 
                "al_hermano_numero) AND ([alumno_especial] = @Original_alumno_especial) AND ((@Is"& _ 
                "Null_fecha_baja = 1 AND [fecha_baja] IS NULL) OR ([fecha_baja] = @Original_fecha"& _ 
                "_baja)) AND ((@IsNull_estado = 1 AND [estado] IS NULL) OR ([estado] = @Original_"& _ 
                "estado)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT codigo_alumno, codigo_familia, codigo_arancel, codigo_curso, "& _ 
                "codigo_año, codigo_beca, codigo_descuento, codigo_taller1, codigo_taller2, codig"& _ 
                "o_taller3, nombre_apellido_alumno, edad, fecha_nacimiento, dni, fecha_ingreso, h"& _ 
                "ermano_numero, alumno_especial, Observaciones, fecha_baja, estado FROM alumnos W"& _ 
                "HERE (codigo_alumno = @codigo_alumno)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@codigo_familia", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_familia", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@codigo_arancel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_arancel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@codigo_curso", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_curso", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@codigo_año", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_año", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@codigo_beca", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_beca", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@codigo_descuento", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_descuento", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@codigo_taller1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_taller1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@codigo_taller2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_taller2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@codigo_taller3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_taller3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@nombre_apellido_alumno", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "nombre_apellido_alumno", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@edad", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "edad", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fecha_nacimiento", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "fecha_nacimiento", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@dni", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dni", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fecha_ingreso", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "fecha_ingreso", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@hermano_numero", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "hermano_numero", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@alumno_especial", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "alumno_especial", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Observaciones", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Observaciones", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fecha_baja", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "fecha_baja", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@estado", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "estado", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_codigo_alumno", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_alumno", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_codigo_familia", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_familia", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_codigo_arancel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_arancel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_codigo_curso", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_curso", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_codigo_año", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_año", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_codigo_año", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_año", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_codigo_beca", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_beca", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_codigo_descuento", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_descuento", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_codigo_taller1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_taller1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_codigo_taller2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_taller2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_codigo_taller3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_taller3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_nombre_apellido_alumno", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "nombre_apellido_alumno", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_edad", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "edad", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_fecha_nacimiento", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "fecha_nacimiento", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_dni", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dni", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_fecha_ingreso", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "fecha_ingreso", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_hermano_numero", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "hermano_numero", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_alumno_especial", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "alumno_especial", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_fecha_baja", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "fecha_baja", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_fecha_baja", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "fecha_baja", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_estado", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "estado", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_estado", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "estado", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@codigo_alumno", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "codigo_alumno", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = "Data Source=LUIS-PC\SQLEXPRESS;Initial Catalog=gestion_providencia;Integrated Sec"& _ 
                "urity=True"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        codigo_alumno, codigo_familia, codigo_arancel, codigo_curso, codigo"& _ 
                "_año, codigo_beca, codigo_descuento, codigo_taller1, codigo_taller2, codigo_tall"& _ 
                "er3, nombre_apellido_alumno, edad, fecha_nacimiento, dni, fecha_ingreso, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                    hermano_numero, alumno_especial, Observaciones, fecha_baja, "& _ 
                "estado"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            alumnos"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSet1.alumnosDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSet1.alumnosDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet1.alumnosDataTable = New DataSet1.alumnosDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSet1.alumnosDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSet1) As Integer
            Return Me.Adapter.Update(dataSet, "alumnos")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_codigo_alumno As Integer,  _
                    ByVal Original_codigo_familia As Integer,  _
                    ByVal Original_codigo_arancel As Integer,  _
                    ByVal Original_codigo_curso As Integer,  _
                    ByVal Original_codigo_año As Global.System.Nullable(Of Integer),  _
                    ByVal Original_codigo_beca As Integer,  _
                    ByVal Original_codigo_descuento As Integer,  _
                    ByVal Original_codigo_taller1 As Integer,  _
                    ByVal Original_codigo_taller2 As Integer,  _
                    ByVal Original_codigo_taller3 As Integer,  _
                    ByVal Original_nombre_apellido_alumno As String,  _
                    ByVal Original_edad As Byte,  _
                    ByVal Original_fecha_nacimiento As Date,  _
                    ByVal Original_dni As String,  _
                    ByVal Original_fecha_ingreso As Date,  _
                    ByVal Original_hermano_numero As Integer,  _
                    ByVal Original_alumno_especial As Integer,  _
                    ByVal Original_fecha_baja As Global.System.Nullable(Of Date),  _
                    ByVal Original_estado As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_codigo_alumno,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_codigo_familia,Integer)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_codigo_arancel,Integer)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_codigo_curso,Integer)
            If (Original_codigo_año.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_codigo_año.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_codigo_beca,Integer)
            Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_codigo_descuento,Integer)
            Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_codigo_taller1,Integer)
            Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_codigo_taller2,Integer)
            Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_codigo_taller3,Integer)
            If (Original_nombre_apellido_alumno Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nombre_apellido_alumno")
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_nombre_apellido_alumno,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_edad,Byte)
            Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_fecha_nacimiento,Date)
            If (Original_dni Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_dni")
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_dni,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_fecha_ingreso,Date)
            Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_hermano_numero,Integer)
            Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_alumno_especial,Integer)
            If (Original_fecha_baja.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_fecha_baja.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Original_estado Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_estado,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal codigo_familia As Integer,  _
                    ByVal codigo_arancel As Integer,  _
                    ByVal codigo_curso As Integer,  _
                    ByVal codigo_año As Global.System.Nullable(Of Integer),  _
                    ByVal codigo_beca As Integer,  _
                    ByVal codigo_descuento As Integer,  _
                    ByVal codigo_taller1 As Integer,  _
                    ByVal codigo_taller2 As Integer,  _
                    ByVal codigo_taller3 As Integer,  _
                    ByVal nombre_apellido_alumno As String,  _
                    ByVal edad As Byte,  _
                    ByVal fecha_nacimiento As Date,  _
                    ByVal dni As String,  _
                    ByVal fecha_ingreso As Date,  _
                    ByVal hermano_numero As Integer,  _
                    ByVal alumno_especial As Integer,  _
                    ByVal Observaciones As String,  _
                    ByVal fecha_baja As Global.System.Nullable(Of Date),  _
                    ByVal estado As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(codigo_familia,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(codigo_arancel,Integer)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(codigo_curso,Integer)
            If (codigo_año.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(codigo_año.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(codigo_beca,Integer)
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(codigo_descuento,Integer)
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(codigo_taller1,Integer)
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(codigo_taller2,Integer)
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(codigo_taller3,Integer)
            If (nombre_apellido_alumno Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nombre_apellido_alumno")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(nombre_apellido_alumno,String)
            End If
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(edad,Byte)
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(fecha_nacimiento,Date)
            If (dni Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dni")
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(dni,String)
            End If
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(fecha_ingreso,Date)
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(hermano_numero,Integer)
            Me.Adapter.InsertCommand.Parameters(15).Value = CType(alumno_especial,Integer)
            If (Observaciones Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(Observaciones,String)
            End If
            If (fecha_baja.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(fecha_baja.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (estado Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(estado,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal codigo_familia As Integer,  _
                    ByVal codigo_arancel As Integer,  _
                    ByVal codigo_curso As Integer,  _
                    ByVal codigo_año As Global.System.Nullable(Of Integer),  _
                    ByVal codigo_beca As Integer,  _
                    ByVal codigo_descuento As Integer,  _
                    ByVal codigo_taller1 As Integer,  _
                    ByVal codigo_taller2 As Integer,  _
                    ByVal codigo_taller3 As Integer,  _
                    ByVal nombre_apellido_alumno As String,  _
                    ByVal edad As Byte,  _
                    ByVal fecha_nacimiento As Date,  _
                    ByVal dni As String,  _
                    ByVal fecha_ingreso As Date,  _
                    ByVal hermano_numero As Integer,  _
                    ByVal alumno_especial As Integer,  _
                    ByVal Observaciones As String,  _
                    ByVal fecha_baja As Global.System.Nullable(Of Date),  _
                    ByVal estado As String,  _
                    ByVal Original_codigo_alumno As Integer,  _
                    ByVal Original_codigo_familia As Integer,  _
                    ByVal Original_codigo_arancel As Integer,  _
                    ByVal Original_codigo_curso As Integer,  _
                    ByVal Original_codigo_año As Global.System.Nullable(Of Integer),  _
                    ByVal Original_codigo_beca As Integer,  _
                    ByVal Original_codigo_descuento As Integer,  _
                    ByVal Original_codigo_taller1 As Integer,  _
                    ByVal Original_codigo_taller2 As Integer,  _
                    ByVal Original_codigo_taller3 As Integer,  _
                    ByVal Original_nombre_apellido_alumno As String,  _
                    ByVal Original_edad As Byte,  _
                    ByVal Original_fecha_nacimiento As Date,  _
                    ByVal Original_dni As String,  _
                    ByVal Original_fecha_ingreso As Date,  _
                    ByVal Original_hermano_numero As Integer,  _
                    ByVal Original_alumno_especial As Integer,  _
                    ByVal Original_fecha_baja As Global.System.Nullable(Of Date),  _
                    ByVal Original_estado As String,  _
                    ByVal codigo_alumno As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(codigo_familia,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(codigo_arancel,Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(codigo_curso,Integer)
            If (codigo_año.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(codigo_año.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(codigo_beca,Integer)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(codigo_descuento,Integer)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(codigo_taller1,Integer)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(codigo_taller2,Integer)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(codigo_taller3,Integer)
            If (nombre_apellido_alumno Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nombre_apellido_alumno")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(nombre_apellido_alumno,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(edad,Byte)
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(fecha_nacimiento,Date)
            If (dni Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dni")
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(dni,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(fecha_ingreso,Date)
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(hermano_numero,Integer)
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(alumno_especial,Integer)
            If (Observaciones Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Observaciones,String)
            End If
            If (fecha_baja.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(fecha_baja.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (estado Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(estado,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_codigo_alumno,Integer)
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_codigo_familia,Integer)
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_codigo_arancel,Integer)
            Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_codigo_curso,Integer)
            If (Original_codigo_año.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_codigo_año.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_codigo_beca,Integer)
            Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_codigo_descuento,Integer)
            Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_codigo_taller1,Integer)
            Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_codigo_taller2,Integer)
            Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_codigo_taller3,Integer)
            If (Original_nombre_apellido_alumno Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nombre_apellido_alumno")
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_nombre_apellido_alumno,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_edad,Byte)
            Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_fecha_nacimiento,Date)
            If (Original_dni Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_dni")
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_dni,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_fecha_ingreso,Date)
            Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_hermano_numero,Integer)
            Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_alumno_especial,Integer)
            If (Original_fecha_baja.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_fecha_baja.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_estado Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_estado,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(41).Value = CType(codigo_alumno,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal codigo_familia As Integer,  _
                    ByVal codigo_arancel As Integer,  _
                    ByVal codigo_curso As Integer,  _
                    ByVal codigo_año As Global.System.Nullable(Of Integer),  _
                    ByVal codigo_beca As Integer,  _
                    ByVal codigo_descuento As Integer,  _
                    ByVal codigo_taller1 As Integer,  _
                    ByVal codigo_taller2 As Integer,  _
                    ByVal codigo_taller3 As Integer,  _
                    ByVal nombre_apellido_alumno As String,  _
                    ByVal edad As Byte,  _
                    ByVal fecha_nacimiento As Date,  _
                    ByVal dni As String,  _
                    ByVal fecha_ingreso As Date,  _
                    ByVal hermano_numero As Integer,  _
                    ByVal alumno_especial As Integer,  _
                    ByVal Observaciones As String,  _
                    ByVal fecha_baja As Global.System.Nullable(Of Date),  _
                    ByVal estado As String,  _
                    ByVal Original_codigo_alumno As Integer,  _
                    ByVal Original_codigo_familia As Integer,  _
                    ByVal Original_codigo_arancel As Integer,  _
                    ByVal Original_codigo_curso As Integer,  _
                    ByVal Original_codigo_año As Global.System.Nullable(Of Integer),  _
                    ByVal Original_codigo_beca As Integer,  _
                    ByVal Original_codigo_descuento As Integer,  _
                    ByVal Original_codigo_taller1 As Integer,  _
                    ByVal Original_codigo_taller2 As Integer,  _
                    ByVal Original_codigo_taller3 As Integer,  _
                    ByVal Original_nombre_apellido_alumno As String,  _
                    ByVal Original_edad As Byte,  _
                    ByVal Original_fecha_nacimiento As Date,  _
                    ByVal Original_dni As String,  _
                    ByVal Original_fecha_ingreso As Date,  _
                    ByVal Original_hermano_numero As Integer,  _
                    ByVal Original_alumno_especial As Integer,  _
                    ByVal Original_fecha_baja As Global.System.Nullable(Of Date),  _
                    ByVal Original_estado As String) As Integer
            Return Me.Update(codigo_familia, codigo_arancel, codigo_curso, codigo_año, codigo_beca, codigo_descuento, codigo_taller1, codigo_taller2, codigo_taller3, nombre_apellido_alumno, edad, fecha_nacimiento, dni, fecha_ingreso, hermano_numero, alumno_especial, Observaciones, fecha_baja, estado, Original_codigo_alumno, Original_codigo_familia, Original_codigo_arancel, Original_codigo_curso, Original_codigo_año, Original_codigo_beca, Original_codigo_descuento, Original_codigo_taller1, Original_codigo_taller2, Original_codigo_taller3, Original_nombre_apellido_alumno, Original_edad, Original_fecha_nacimiento, Original_dni, Original_fecha_ingreso, Original_hermano_numero, Original_alumno_especial, Original_fecha_baja, Original_estado, Original_codigo_alumno)
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _alumnosTableAdapter As alumnosTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property alumnosTableAdapter() As alumnosTableAdapter
            Get
                Return Me._alumnosTableAdapter
            End Get
            Set
                Me._alumnosTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._alumnosTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._alumnosTableAdapter.Connection) Is Nothing)) Then
                    Return Me._alumnosTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._alumnosTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DataSet1, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._alumnosTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.alumnos.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._alumnosTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DataSet1, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._alumnosTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.alumnos.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._alumnosTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DataSet1, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._alumnosTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.alumnos.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._alumnosTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DataSet1) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._alumnosTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._alumnosTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager no contiene información de conexión. Establezca cada propieda"& _ 
                        "d TableAdapterManager TableAdapter en una instancia TableAdapter válida.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("La transacción no puede comenzar. La conexión de datos actual no es compatible co"& _ 
                        "n las transacciones o el estado actual no permite que comience la transacción.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._alumnosTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._alumnosTableAdapter, Me._alumnosTableAdapter.Connection)
                    Me._alumnosTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._alumnosTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._alumnosTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._alumnosTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._alumnosTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._alumnosTableAdapter) Is Nothing) Then
                    Me._alumnosTableAdapter.Connection = CType(revertConnections(Me._alumnosTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._alumnosTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
